   1  int [] fn shell_sort(int unsorted_list[]) {
              [0001, 0001] (0002,              typeInt) {int}
              [0001, 0005] (0045,           arrayBegin) {[}
              [0001, 0006] (0046,             arrayEnd) {]}
              [0001, 0008] (0041,               fnDecl) {fn}
              [0001, 0011] (0001,           identifier) {shell_sort}
              [0001, 0021] (0047,           paramBegin) {(}
              [0001, 0022] (0002,              typeInt) {int}
              [0001, 0026] (0001,           identifier) {unsorted_list}
              [0001, 0039] (0045,           arrayBegin) {[}
              [0001, 0040] (0046,             arrayEnd) {]}
              [0001, 0041] (0048,             paramEnd) {)}
              [0001, 0043] (0049,           scopeBegin) {{}
   2      int value;
              [0002, 0005] (0002,              typeInt) {int}
              [0002, 0009] (0001,           identifier) {value}
              [0002, 0014] (0039,            semicolon) {;}
   3      int i;
              [0003, 0005] (0002,              typeInt) {int}
              [0003, 0009] (0001,           identifier) {i}
              [0003, 0010] (0039,            semicolon) {;}
   4      int j;
              [0004, 0005] (0002,              typeInt) {int}
              [0004, 0009] (0001,           identifier) {j}
              [0004, 0010] (0039,            semicolon) {;}
   5      int h = 1;
              [0005, 0005] (0002,              typeInt) {int}
              [0005, 0009] (0001,           identifier) {h}
              [0005, 0011] (0029,               opAttr) {=}
              [0005, 0013] (0009,               intVal) {1}
              [0005, 0014] (0039,            semicolon) {;}
   6  
   7      int size = unsorted_list.size();
              [0007, 0005] (0002,              typeInt) {int}
              [0007, 0009] (0001,           identifier) {size}
              [0007, 0014] (0029,               opAttr) {=}
              [0007, 0016] (0001,           identifier) {unsorted_list}
              [0007, 0029] (0037,             opConcat) {.}
              [0007, 0030] (0001,           identifier) {size}
              [0007, 0034] (0047,           paramBegin) {(}
              [0007, 0035] (0048,             paramEnd) {)}
              [0007, 0036] (0039,            semicolon) {;}
   8  
   9      while (h < size) {
              [0009, 0005] (0017,             cmdWhile) {while}
              [0009, 0011] (0047,           paramBegin) {(}
              [0009, 0012] (0001,           identifier) {h}
              [0009, 0014] (0026,           opLessThan) {<}
              [0009, 0016] (0001,           identifier) {size}
              [0009, 0020] (0048,             paramEnd) {)}
              [0009, 0022] (0049,           scopeBegin) {{}
  10          
  11          for i in (h, size; i = i + 1) {
              [0011, 0009] (0016,               cmdFor) {for}
              [0011, 0013] (0001,           identifier) {i}
              [0011, 0015] (0001,           identifier) {in}
              [0011, 0018] (0047,           paramBegin) {(}
              [0011, 0019] (0001,           identifier) {h}
              [0011, 0020] (0040,             commaSep) {,}
              [0011, 0022] (0001,           identifier) {size}
              [0011, 0026] (0039,            semicolon) {;}
              [0011, 0028] (0001,           identifier) {i}
              [0011, 0030] (0029,               opAttr) {=}
              [0011, 0032] (0001,           identifier) {i}
              [0011, 0034] (0030,                opAdd) {+}
              [0011, 0036] (0009,               intVal) {1}
              [0011, 0037] (0048,             paramEnd) {)}
              [0011, 0039] (0049,           scopeBegin) {{}
  12              value = unsorted_list[i];
              [0012, 0013] (0001,           identifier) {value}
              [0012, 0019] (0029,               opAttr) {=}
              [0012, 0021] (0001,           identifier) {unsorted_list}
              [0012, 0034] (0045,           arrayBegin) {[}
              [0012, 0035] (0001,           identifier) {i}
              [0012, 0036] (0046,             arrayEnd) {]}
              [0012, 0037] (0039,            semicolon) {;}
  13              j = i;
              [0013, 0013] (0001,           identifier) {j}
              [0013, 0015] (0029,               opAttr) {=}
              [0013, 0017] (0001,           identifier) {i}
              [0013, 0018] (0039,            semicolon) {;}
  14              
  15              while (j > h - 1 && value <= unsorted_list[j - h]) {
              [0015, 0013] (0017,             cmdWhile) {while}
              [0015, 0019] (0047,           paramBegin) {(}
              [0015, 0020] (0001,           identifier) {j}
              [0015, 0022] (0025,            opGtrThan) {>}
              [0015, 0024] (0001,           identifier) {h}
              [0015, 0026] (0031,                opSub) {-}
              [0015, 0028] (0009,               intVal) {1}
              [0015, 0030] (0022,                opAnd) {&&}
              [0015, 0033] (0001,           identifier) {value}
              [0015, 0039] (0028,             opLessEq) {<=}
              [0015, 0042] (0001,           identifier) {unsorted_list}
              [0015, 0055] (0045,           arrayBegin) {[}
              [0015, 0056] (0001,           identifier) {j}
              [0015, 0058] (0031,                opSub) {-}
              [0015, 0060] (0001,           identifier) {h}
              [0015, 0061] (0046,             arrayEnd) {]}
              [0015, 0062] (0048,             paramEnd) {)}
              [0015, 0064] (0049,           scopeBegin) {{}
  16                  unsorted_list[j] = unsorted_list [j - h];
              [0016, 0017] (0001,           identifier) {unsorted_list}
              [0016, 0030] (0045,           arrayBegin) {[}
              [0016, 0031] (0001,           identifier) {j}
              [0016, 0032] (0046,             arrayEnd) {]}
              [0016, 0034] (0029,               opAttr) {=}
              [0016, 0036] (0001,           identifier) {unsorted_list}
              [0016, 0050] (0045,           arrayBegin) {[}
              [0016, 0051] (0001,           identifier) {j}
              [0016, 0053] (0031,                opSub) {-}
              [0016, 0055] (0001,           identifier) {h}
              [0016, 0056] (0046,             arrayEnd) {]}
              [0016, 0057] (0039,            semicolon) {;}
  17                  j = j - h;
              [0017, 0017] (0001,           identifier) {j}
              [0017, 0019] (0029,               opAttr) {=}
              [0017, 0021] (0001,           identifier) {j}
              [0017, 0023] (0031,                opSub) {-}
              [0017, 0025] (0001,           identifier) {h}
              [0017, 0026] (0039,            semicolon) {;}
  18              }
              [0018, 0013] (0050,             scopeEnd) {}}
  19  
  20              unsorted_list[j] = value;
              [0020, 0013] (0001,           identifier) {unsorted_list}
              [0020, 0026] (0045,           arrayBegin) {[}
              [0020, 0027] (0001,           identifier) {j}
              [0020, 0028] (0046,             arrayEnd) {]}
              [0020, 0030] (0029,               opAttr) {=}
              [0020, 0032] (0001,           identifier) {value}
              [0020, 0037] (0039,            semicolon) {;}
  21          }
              [0021, 0009] (0050,             scopeEnd) {}}
  22          
  23          h = h / 3;
              [0023, 0009] (0001,           identifier) {h}
              [0023, 0011] (0029,               opAttr) {=}
              [0023, 0013] (0001,           identifier) {h}
              [0023, 0015] (0033,                opDiv) {/}
              [0023, 0017] (0009,               intVal) {3}
              [0023, 0018] (0039,            semicolon) {;}
  24      }
              [0024, 0005] (0050,             scopeEnd) {}}
  25  
  26      return unsorted_list;
              [0026, 0005] (0042,                fnRtn) {return}
              [0026, 0012] (0001,           identifier) {unsorted_list}
              [0026, 0025] (0039,            semicolon) {;}
  27  }
              [0027, 0001] (0050,             scopeEnd) {}}
  28  
  29  int fn main() {
              [0029, 0001] (0002,              typeInt) {int}
              [0029, 0005] (0041,               fnDecl) {fn}
              [0029, 0008] (0038,                 main) {main}
              [0029, 0012] (0047,           paramBegin) {(}
              [0029, 0013] (0048,             paramEnd) {)}
              [0029, 0015] (0049,           scopeBegin) {{}
  30      int unsorted_list[1000];
              [0030, 0005] (0002,              typeInt) {int}
              [0030, 0009] (0001,           identifier) {unsorted_list}
              [0030, 0022] (0045,           arrayBegin) {[}
              [0030, 0023] (0009,               intVal) {1000}
              [0030, 0027] (0046,             arrayEnd) {]}
              [0030, 0028] (0039,            semicolon) {;}
  31      int value;
              [0031, 0005] (0002,              typeInt) {int}
              [0031, 0009] (0001,           identifier) {value}
              [0031, 0014] (0039,            semicolon) {;}
  32      int size;
              [0032, 0005] (0002,              typeInt) {int}
              [0032, 0009] (0001,           identifier) {size}
              [0032, 0013] (0039,            semicolon) {;}
  33      int i = 0;
              [0033, 0005] (0002,              typeInt) {int}
              [0033, 0009] (0001,           identifier) {i}
              [0033, 0011] (0029,               opAttr) {=}
              [0033, 0013] (0009,               intVal) {0}
              [0033, 0014] (0039,            semicolon) {;}
  34  
  35      while(gets(value) != EOF) {
              [0035, 0005] (0017,             cmdWhile) {while}
              [0035, 0010] (0047,           paramBegin) {(}
              [0035, 0011] (0043,               fnRead) {gets}
              [0035, 0015] (0047,           paramBegin) {(}
              [0035, 0016] (0001,           identifier) {value}
              [0035, 0021] (0048,             paramEnd) {)}
              [0035, 0023] (0024,           opNotEqual) {!=}
              [0035, 0026] (0052,                  EOF) {EOF}
              [0035, 0029] (0048,             paramEnd) {)}
              [0035, 0031] (0049,           scopeBegin) {{}
  36          unsorted_list[i] = value;
              [0036, 0009] (0001,           identifier) {unsorted_list}
              [0036, 0022] (0045,           arrayBegin) {[}
              [0036, 0023] (0001,           identifier) {i}
              [0036, 0024] (0046,             arrayEnd) {]}
              [0036, 0026] (0029,               opAttr) {=}
              [0036, 0028] (0001,           identifier) {value}
              [0036, 0033] (0039,            semicolon) {;}
  37          i = i + 1;
              [0037, 0009] (0001,           identifier) {i}
              [0037, 0011] (0029,               opAttr) {=}
              [0037, 0013] (0001,           identifier) {i}
              [0037, 0015] (0030,                opAdd) {+}
              [0037, 0017] (0009,               intVal) {1}
              [0037, 0018] (0039,            semicolon) {;}
  38      }
              [0038, 0005] (0050,             scopeEnd) {}}
  39  
  40      size = i;
              [0040, 0005] (0001,           identifier) {size}
              [0040, 0010] (0029,               opAttr) {=}
              [0040, 0012] (0001,           identifier) {i}
              [0040, 0013] (0039,            semicolon) {;}
  41      
  42      unsorted_list = shell_sort(unsorted_list);
              [0042, 0005] (0001,           identifier) {unsorted_list}
              [0042, 0019] (0029,               opAttr) {=}
              [0042, 0021] (0001,           identifier) {shell_sort}
              [0042, 0031] (0047,           paramBegin) {(}
              [0042, 0032] (0001,           identifier) {unsorted_list}
              [0042, 0045] (0048,             paramEnd) {)}
              [0042, 0046] (0039,            semicolon) {;}
  43      
  44      for i in (0, size - 1, 1) {
              [0044, 0005] (0016,               cmdFor) {for}
              [0044, 0009] (0001,           identifier) {i}
              [0044, 0011] (0001,           identifier) {in}
              [0044, 0014] (0047,           paramBegin) {(}
              [0044, 0015] (0009,               intVal) {0}
              [0044, 0016] (0040,             commaSep) {,}
              [0044, 0018] (0001,           identifier) {size}
              [0044, 0023] (0031,                opSub) {-}
              [0044, 0025] (0009,               intVal) {1}
              [0044, 0026] (0040,             commaSep) {,}
              [0044, 0028] (0009,               intVal) {1}
              [0044, 0029] (0048,             paramEnd) {)}
              [0044, 0031] (0049,           scopeBegin) {{}
  45          puts("%d ", unsorted_list[i]);
              [0045, 0009] (0044,              fnWrite) {puts}
              [0045, 0013] (0047,           paramBegin) {(}
              [0045, 0014] (0012,            stringVal) {"%d "}
              [0045, 0019] (0040,             commaSep) {,}
              [0045, 0021] (0001,           identifier) {unsorted_list}
              [0045, 0034] (0045,           arrayBegin) {[}
              [0045, 0035] (0001,           identifier) {i}
              [0045, 0036] (0046,             arrayEnd) {]}
              [0045, 0037] (0048,             paramEnd) {)}
              [0045, 0038] (0039,            semicolon) {;}
  46      }
              [0046, 0005] (0050,             scopeEnd) {}}
  47      
  48      puts("%d", unsorted_list[size - 1]);
              [0048, 0005] (0044,              fnWrite) {puts}
              [0048, 0009] (0047,           paramBegin) {(}
              [0048, 0010] (0012,            stringVal) {"%d"}
              [0048, 0014] (0040,             commaSep) {,}
              [0048, 0016] (0001,           identifier) {unsorted_list}
              [0048, 0029] (0045,           arrayBegin) {[}
              [0048, 0030] (0001,           identifier) {size}
              [0048, 0035] (0031,                opSub) {-}
              [0048, 0037] (0009,               intVal) {1}
              [0048, 0038] (0046,             arrayEnd) {]}
              [0048, 0039] (0048,             paramEnd) {)}
              [0048, 0040] (0039,            semicolon) {;}
  49  
  50      return 0;
              [0050, 0005] (0042,                fnRtn) {return}
              [0050, 0012] (0009,               intVal) {0}
              [0050, 0013] (0039,            semicolon) {;}
  51  }
              [0051, 0001] (0050,             scopeEnd) {}}
  52  EOF
              [0052, 0001] (0052,                     ) {EOF}
